1、最优二叉树：
给定n个权值作为n个叶子结点，构造一棵二叉树，若该树的带权路径长度达到最小，称这样的二叉树为最优二叉树，
也称为哈夫曼树(Huffman Tree)。哈夫曼树是带权路径长度最短的树，权值较大的结点离根节点近。

2、由森林转换的二叉树中，根结点即为第一棵树的根结点，根结点的左子树是由第一棵树中除了根结点以外其余结点组成的，根结点的右子树是由森林中除第一棵树外其他树转换来的。

3、遍历二叉树的算法中的基本操作是访问结点，则不论按哪一种次序进行遍历，对n个结点的二叉树，其时间复杂度均为O(n)。所需辅助空间为遍历过程中栈的最大容量，即树的深度，最坏情况下为n,则空间复杂度也为O(n)。

4、对于任意一棵二叉树，如果其叶结点数为N0，而度数为2的结点总数为N2，则N0=N2+1
    解释一：度数 = 所有结点数-1；总的度数-度为1的结点数-度为2的结点数+1即为叶子节点
    解释二：假设二叉树有n个结点，每个结点的度数和：0*n0 + 1*n1 + 2*n2 = n-1;n = n0+n1+n2 =>n0 = n2+1

5、hash函数可以把字符串等任意长度的输入映射成固定长度的整数，也就是哈希值；哈希表建立了哈希值与原值信息存储之间的联系，可以通过哈希值查找到原值信息

6、huffman树的构造：每次从候选集中选择最小的两个元素构建新的根节点，所以只存在度为0和2的节点。
    我们平时一般所说的哈夫曼树是指最优二叉树,也叫做严格二叉树（注意不是完全二叉树）,但是哈夫曼树完全不局限于二叉树,也存在于多叉树中,即度为m的哈夫曼树,也叫最优m叉树,严格m叉树（注意不是完全m叉树）.

7、17个结点同步信息
    链接：https://www.nowcoder.com/questionTerminal/21efe6541da84d13af68fcf9d658ea93
    来源：牛客网

    第一步：两两配对，8次
    第二步：从第一步中的抽出8个，在进行两两配对，4次
    第三步：从第二步中的四个两两配对，2次
    第四步：从第三步中的两个两两配对，1次，这一步执行完毕后，有两个节点已经拥有全部信息
    第五步：第四步的两个和其他两个相互配对，2次，此时，4个完成
    第六步：这四个和剩下的4个配对，4此，此时，8个完成
    第七部：这8个和剩下的8个配对，此时16个完成
    第八步：和最后一个配对，此时17个完成
    总计：8+4+2+1+2+4+8+1=30

8、n个顶点的连通图至少有n-1条边（树）；n个顶点的简单图（完全图）至少有n*(n-1)/2条边。

9、平衡二叉树，旋转


