 参考网址：https://www.cnblogs.com/xxez-d/p/5989944.html
 * 在java8以前的版本中，定义一个接口时，所有的方法必须是抽象方法，不能有具体实现，这是java语法规定的。
 * 但是在java8中定义一个接口时，在满足特定的前提下，可以有方法的具体实现。
 * 这样一个接口中可以有属性，可以有抽象方法，也可以有具体的方法，
 * 这跟java8以前的接口比，明显接口的功能变得强大了。
 *
 * 接口中定义具体的方法实现是有限制的，它不能像我们在一个普通类那样随便定义方法实现，
 * 它只能定义default和static类型的方法。
 *
 *     1）default方法调用
 * 　　定义一个类实现该接口，new该类的实例，调用即可。
 * 　　2）static方法调用
 * 　　类名.方法名() 调用，这跟以前的静态方法调用方式一样。
 *
 * 应用场景
 * 　　想象这样一中情况，当多个类实现一个接口的某个方法时，方法的具体实现代码相同，
 * 这样就会造成代码重复问题。接口增强就相当于把公共的代码抽离出来，放入接口定义中，
 * 这样实现类对于该方法就不用重新定义，直接调用即可，这很好的解决了实现该接口的子类代码重复的问题。