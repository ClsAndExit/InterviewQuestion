/**
*2018年8月25日
*/
1、DK1.7及之前版本链表的插入采用头插法，而1.8改为尾插法:
    https://blog.csdn.net/wyz745322878/article/details/52912462
    那么为什么jdk1.8是头插，之前为头插法呢
    1.8为什么尾插我觉得大家通过上面这段话应该都可以在知道原因吧，因为我已经遍历到了链表尾部了，尾插不就更省事吗？
    可是有些人问了1.7是单独的数组加链表，那不应该也尾插吗？这就有一个效率问题了，因为jdk1.8每当节点>8时就会变为树，而树的遍历会更加快速，
    而链表遍历最多也就是7次，效率还是很高的，可是1.7就不是这样了，如果你有10000个节点，那你如果尾插的话就需要遍历10000次，这是非常耗时的，所以1.7采用的是头插法。















